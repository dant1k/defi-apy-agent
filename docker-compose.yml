services:
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  api:
    image: python:3.11-slim
    restart: unless-stopped
    working_dir: /app
    volumes:
      - .:/app
    command: >
      sh -c "pip install --no-cache-dir -r requirements.txt && uvicorn api.main:app --host 0.0.0.0 --port 8000"
    environment:
      - PYTHONPATH=/app:/app/src
      - REDIS_URL=redis://redis:6379/0
    ports:
      - "8000:8000"
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "python -c \"import urllib.request; urllib.request.urlopen('http://127.0.0.1:8000/health', timeout=5)\"",
        ]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 30s

  worker:
    image: python:3.11-slim
    restart: unless-stopped
    working_dir: /app
    volumes:
      - .:/app
    command: >
      sh -c "pip install --no-cache-dir -r requirements.txt && python -m worker.updater"
    environment:
      - PYTHONPATH=/app:/app/src
      - REDIS_URL=redis://redis:6379/0
      - AGGREGATOR_UPDATE_INTERVAL=900
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "python -c \"import os, redis; redis.Redis.from_url(os.getenv('REDIS_URL','redis://redis:6379/0')).ping()\"",
        ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

volumes:
  redis-data:
