#!/usr/bin/env python3
"""–¢–µ—Å—Ç –∞–≥–µ–Ω—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –ø–æ–∏—Å–∫–∞ –ø—É–ª–æ–≤."""

import sys
sys.path.append('.')

from src.tools import get_opportunities, force_refresh_all_pools
from src.app import run_agent

def test_agent():
    print("üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –∫—ç—à...")
    force_refresh_all_pools()

    print("üîç –ò—â–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è ETH...")
    opportunities = get_opportunities('ETH', limit=5, force_refresh=True)

    print(f"üìä –ù–∞–π–¥–µ–Ω–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π: {len(opportunities)}")
    for i, opp in enumerate(opportunities[:3], 1):
        print(f"{i}. {opp.get('platform', 'Unknown')} ({opp.get('chain', 'Unknown')})")
        print(f"   APY: {opp.get('apy', 0):.2f}% | TVL: ${opp.get('tvl_usd', 0):,.0f}")
        print(f"   –†–∏—Å–∫: {opp.get('risk_level', 'Unknown')}")
        print()

    print("ü§ñ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞...")
    result = run_agent('ETH', {'min_apy': 1}, result_limit=10, force_refresh=True)
    
    print(f"–°—Ç–∞—Ç—É—Å: {result.get('status')}")
    if result.get('best_strategy'):
        bs = result['best_strategy']
        print(f"–õ—É—á—à–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è: {bs.get('platform')} - APY: {bs.get('apy')}% - TVL: ${bs.get('tvl_usd'):,.0f}")
    
    stats = result.get('statistics', {})
    print(f"–†–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–æ: {stats.get('considered', 0)}")
    print(f"–ü–æ–¥—Ö–æ–¥—è—â–∏—Ö: {stats.get('matched', 0)}")

if __name__ == "__main__":
    test_agent()

