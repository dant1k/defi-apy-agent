#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –±–µ–∑ –∏–∫–æ–Ω–æ–∫
"""

import os
import requests
import json
from pathlib import Path

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
ICONS_DIR = Path("frontend/public/icons")
BACKUP_DIR = Path("api/static/icons")

def normalize_name(name: str) -> str:
    """–ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞—Ç—å –∏–º—è –¥–ª—è —Ñ–∞–π–ª–∞"""
    return name.replace(" ", "").replace("-", "").replace("_", "").replace(".", "")

def check_icon_exists(name: str, category: str) -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∏–∫–æ–Ω–∫–∞ –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–∞"""
    if category == "chains":
        file_name = normalize_name(name)
        local_path = ICONS_DIR / "chains" / f"{file_name}.png"
        backup_path = BACKUP_DIR / "chains" / f"{file_name}.png"
    elif category == "tokens":
        local_path = ICONS_DIR / "tokens" / f"{name}.png"
        backup_path = BACKUP_DIR / "tokens" / f"{name}.png"
    elif category == "protocols":
        import re
        file_name = re.sub(r'[^A-Z0-9]', '', name.upper())
        local_path = ICONS_DIR / "protocols" / f"{file_name}.png"
        backup_path = BACKUP_DIR / "protocols" / f"{file_name}.png"
    else:
        return False
    
    return local_path.exists() or backup_path.exists()

def get_missing_chains():
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å–µ—Ç–µ–π –±–µ–∑ –∏–∫–æ–Ω–æ–∫"""
    print("üåê Getting missing chain icons...")
    
    try:
        response = requests.get("http://localhost:8000/chains")
        if response.status_code == 200:
            chains = response.json().get("items", [])
        else:
            print("‚ùå Failed to get chains from API")
            return []
    except:
        print("‚ùå API not available")
        return []
    
    missing_icons = []
    for chain in chains:
        if not check_icon_exists(chain, "chains"):
            missing_icons.append(chain)
    
    return missing_icons

def get_missing_tokens():
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–æ–∫–µ–Ω–æ–≤ –±–µ–∑ –∏–∫–æ–Ω–æ–∫"""
    print("ü™ô Getting missing token icons...")
    
    try:
        response = requests.get("http://localhost:8000/tokens?limit=100")
        if response.status_code == 200:
            tokens_data = response.json().get("tokens", [])
            tokens = [token.get("symbol", "") for token in tokens_data if token.get("symbol")]
        else:
            print("‚ùå Failed to get tokens from API")
            return []
    except:
        print("‚ùå API not available")
        return []
    
    missing_icons = []
    for token in tokens:
        if not check_icon_exists(token, "tokens"):
            missing_icons.append(token)
    
    return missing_icons

def get_missing_protocols():
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤ –±–µ–∑ –∏–∫–æ–Ω–æ–∫"""
    print("üèõÔ∏è Getting missing protocol icons...")
    
    try:
        response = requests.get("http://localhost:8000/protocols")
        if response.status_code == 200:
            protocols = response.json().get("items", [])
        else:
            print("‚ùå Failed to get protocols from API")
            return []
    except:
        print("‚ùå API not available")
        return []
    
    missing_icons = []
    for protocol in protocols:
        if not check_icon_exists(protocol, "protocols"):
            missing_icons.append(protocol)
    
    return missing_icons

def main():
    print("üìã Getting complete list of missing icons...")
    
    missing_chains = get_missing_chains()
    missing_tokens = get_missing_tokens()
    missing_protocols = get_missing_protocols()
    
    print(f"\nüìä Summary:")
    print(f"  Missing chain icons: {len(missing_chains)}")
    print(f"  Missing token icons: {len(missing_tokens)}")
    print(f"  Missing protocol icons: {len(missing_protocols)}")
    print(f"  Total missing: {len(missing_chains) + len(missing_tokens) + len(missing_protocols)}")
    
    print(f"\nüåê Missing Chain Icons ({len(missing_chains)}):")
    for i, chain in enumerate(missing_chains, 1):
        print(f"  {i:3d}. {chain}")
    
    print(f"\nü™ô Missing Token Icons ({len(missing_tokens)}):")
    for i, token in enumerate(missing_tokens, 1):
        print(f"  {i:3d}. {token}")
    
    print(f"\nüèõÔ∏è Missing Protocol Icons ({len(missing_protocols)}):")
    for i, protocol in enumerate(missing_protocols, 1):
        print(f"  {i:3d}. {protocol}")

if __name__ == "__main__":
    main()

